enum ItemStatus {
  Listed
  Bought
  Deleted
}

enum Condition {
  NEW
  LIKE_NEW
  EXCELLENT
  GOOD
  DAMAGED
}

type Item @entity {
  id: String!
  buyer: Bytes! # Address 0x0000... if no one has bought it yet
  seller: Bytes!
  title: String! # string
  description: String! # string
  price: BigInt! # uint256
  currency: String! # string
  photosIPFSHashes: [String!]! # array of strings that are photo hashes
  itemStatus: ItemStatus!
  condition: Condition! # uint8
  category: String! # string
  subcategory: String! # string
  country: String! # string
  isGift: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type User @entity {
  id: Bytes!
  userAddress: Bytes! # address
  username: String! # string
  firstName: String! # string
  lastName: String! # string
  country: String! # string
  description: String! # string
  email: String! # string
  avatarHash: String! # string
  isModerator: Boolean! # bool
  moderatorFee: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  isActive: Boolean!

  reviews: [Review!]! @derivedFrom(field: "user")
}

type Review @entity {
  id: Bytes! # unique identifier for the review
  from: Bytes! # userAddress of the reviewer
  content: String! # content of the review
  rating: Int! # rating (1 to 5)
  itemId: BigInt! # reference to the item being reviewed
  user: User!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transaction @entity {
  id: String!
  itemId: BigInt! # uint256
  buyer: Bytes! # address
  seller: Bytes! # address
  moderator: Bytes! # address
  price: BigInt! # uint256
  currency: String! # string
  moderatorFee: Int! # uint256
  buyerApproved: Boolean!
  sellerApproved: Boolean!
  disputed: Boolean!
  disputedBySeller: Boolean! # address
  disputedByBuyer: Boolean! # address
  isCompleted: Boolean!
  creationTime: BigInt!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  buyerPercentage: Int! # uint8
  sellerPercentage: Int! # uint8
}
